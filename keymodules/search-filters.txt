

------------------------------------------------Search-fielter------------------------------------------------>>
<div class="row">
	<div class="col-6">
		<div class="card-body">
			<mat-form-field>
				<mat-label>Filter</mat-label>
				<input matInput (keyup)="applyFilter($event)" placeholder="Ex. Mia" #input>
			</mat-form-field>
		</div>

	</div>
	<div class="col-6">
		<div class="card-body">
			<div class="btns" style="float: right;">
				<button mat-raised-button
					(click)="exporter.exportTable('xlsx', {fileName:'test', sheet: 'sheet_name', Props: {Author: 'Talha'}})">Excel</button>
				<button mat-raised-button (click)="exporter.exportTable('csv')">Csv</button>
			</div>
		</div>
	</div>

	<div class="col-12">
		<div class="card-body">
			<div class="mat-elevation-z8">
				<table mat-table matTableExporter #tab mat-table [dataSource]="getarray" matSort
					#exporter="matTableExporter" [hiddenColumns]="[0]">
					<ng-container matColumnDef="S No">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> S No </th>
						<td mat-cell *matCellDef="let row; let i=index"> {{ i+1 }} </td>
					</ng-container>

					<ng-container matColumnDef="Name">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>
						<td mat-cell *matCellDef="let row"> {{row.name}} </td>
					</ng-container>

					<ng-container matColumnDef="Mobile No.">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile No. </th>
						<td mat-cell *matCellDef="let row"> {{row.phonenumber}}  </td>
					</ng-container>

					<ng-container matColumnDef="Feedback">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> Desgination </th>
						<td mat-cell *matCellDef="let row">  {{row.desigation}} </td>
					</ng-container>

          <ng-container matColumnDef="Salary">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> Salary </th>
						<td mat-cell *matCellDef="let row">  {{row.salary}} </td>
					</ng-container>
         

					<ng-container matColumnDef="Delete">
						<th mat-header-cell *matHeaderCellDef mat-sort-header> Delete </th>

            <td mat-cell *matCellDef="let row">  <button (click)="deletedata(row.id)">Delete</button> </td>
           
					
					</ng-container>
          <!-- <button (click)="deletedata(row.id)">Delete</button> -->

					<tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
					<tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>

					<tr class="mat-row" *matNoDataRow>
						<td class="mat-cell" colspan="4">No data matching the filter "{{input.value}}"</td>
             <button (click)="deletedata(row.id)">Delete</button>&nbsp;
					</tr>
				</table>

				<mat-paginator [pageSizeOptions]="[10, 25, 50, 100]" showFirstLastButton></mat-paginator>
			</div>
			<br><br>
		</div>
	</div>
</div>


-------------------------------------------------------------F:\RMC\rmc\rmc\src\app\dashboard\tappal\feedback\feedback.component.ts------------------------------------------------------------>>

import { MatTableDataSource } from '@angular/material/table';

 getarray: MatTableDataSource<any>;

 displayedColumns: string[] = ['S No',  'Name', 'Mobile No.', 'Feedback' , 'Salary','Delete']; Name
  constructor(private router: Router, private formBuilder: FormBuilder, private tappalservice: TappalserviceService, private modalService: NgbModal, private route: ActivatedRoute) {  
    // this.addUserForm = this.formBuilder.group({
    //   usr     : ['', [Validators.required]],
    // }); 
    this.submitForm = this.formBuilder.group({
      name: ['', Validators.required], 
      phone: ['', Validators.required],
      desg: ['', Validators.required],
      salary: ['', Validators.required],
    });

  }

 getfeedbackreportdata() {
    console.log('Amvt')
    this.tappalservice.getFeedbackreport().subscribe((resdata: any) => {
      console.log(resdata);
      if (resdata.status == 201) {
        localStorage.clear();
        this.router.navigate(['/auth/signin2']);
      } else {
        //  this.eventcomparisiondata=resdata.data;

      ----------------------------  this.tobeassingedtabledata = new MatTableDataSource(resdata.data); -----------------------------
      
        this.tobeassingedtabledata.paginator = this.paginator;
        this.tobeassingedtabledata.sort = this.sort;       
        if (resdata.data.length == 0) {
          alert("Nodata Found");         

        } else {          
        }
      }
    }, er => {
    })
  }


 applyFilter(event: Event) {
          const filterValue = (event.target as HTMLInputElement).value;
          this.getarray.filter = filterValue.trim().toLowerCase();
          // getarray
        }




                      // ...................................... Garbagefinds.get1........................
  peopleChallan() {
    console.log('tested');
    this.tappalservice.feedbacksubmit().subscribe((Result : any) => {
      console.log(Result,"results");
      if (Result.status == 200) {
        // this.getarray = Result.data;
        this.getarray = new MatTableDataSource(Result.data);
          this.getarray.paginator = this.paginator;
          this.getarray.sort = this.sort;
        console.log(Result.data);
        
      }
    })
  }
